openapi: 3.0.0
info:
    title: Auth Boilerplate API
    description: API documentation for Auth Boilerplate project
    version: 1.0.0
servers:
    - url: http://localhost:5000
      description: Auth server
components:
    securitySchemes:
        bearerAuth:
            type: http
            scheme: bearer
            bearerFormat: JWT

        cookieRefresh:
            type: apiKey
            in: cookie
            name: refreshToken
paths:
    /auth/signup:
        post:
            summary: Register a new user (require auth as manager min)
            tags:
                - Users
            security:
                - bearerAuth: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                name:
                                    type: string
                                email:
                                    type: string
                                password:
                                    type: string
                                imageUrl:
                                    type: string
            responses:
                '200':
                    description: User registered successfully
                '400':
                    description: Email already taken
                '500':
                    description: Server error

    /auth/login:
        post:
            summary: login with credentials
            tags:
                - Users
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                email:
                                    type: string
                                password:
                                    type: string
            responses:
                '200':
                    description: Authentification successful
                    headers:
                        Set-Cookie:
                            schema:
                                type: string
                                example: refreshToken=abcde12345; Path=/; HttpOnly
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    accessToken:
                                        type: string
                    
                '400':
                    description: No user with this credential or password invalid
                '500':
                    description: Server error

    /auth/refresh:
        post:
            summary: Try to refresh access token with the refresh token
            tags:
                - Users
            security:
                - cookieRefresh: []

            responses:
                '200':
                    description: Refresh successful
                    headers:
                        Set-Cookie:
                            schema:
                                type: string
                                example: refreshToken=abcde12345; Path=/; HttpOnly
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    accessToken:
                                        type: string
                '401':
                    description: No refresh token
                '403':
                    description: Refresh failed, no access
                '500':
                    description: Server error

    /job:
        get:
            summary: Get the job list
            tags:
                - Jobs
            security:
                - bearerAuth: []
            responses:
                '200':
                    description: get list
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: object
                                    properties:
                                        _id:
                                            type: string
                                        jobTitle:
                                            type: string
                                        language:
                                            type: string
                                        company:
                                            type: string
                                        link:
                                            type: string
                                        source:
                                            type: string
                                        user:
                                            type: string
                '401': 
                    description: Unauthorized, need access token
                '403':
                    description: Cannot access to the resource with current access level
                '500':
                    description: Server error

        post:
            summary: create a job
            tags:
                - Jobs
            security:
                - bearerAuth: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                jobTitle:
                                    type: string
                                language:
                                    type: string
                                company:
                                    type: string
                                link:
                                    type: string
                                source:
                                    type: string
            responses:
                '200':
                    description: Job succefully created
                '400': 
                    description: Malformed request
                '401': 
                    description: Unauthorized, need access token
                '403':
                    description: Cannot access to the resource with current access level
                '500':
                    description: Server error

        put:
            summary: Modify a job
            tags:
                - Jobs
            security:
                - bearerAuth: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                _id:
                                    type: string
                                jobTitle:
                                    type: string
                                language:
                                    type: string
                                company:
                                    type: string
                                link:
                                    type: string
                                source:
                                    type: string
                            required:
                                - _id
                                
            responses:
                '200':
                    description: Job succefully modified
                '400': 
                    description: Malformed request
                '401': 
                    description: Unauthorized, need access token
                '403':
                    description: Cannot access to the resource with current access level
                '500':
                    description: Server error

    /job/{jobId}:
        get:
            summary: Get one job
            tags:
                - Jobs
            security:
                - bearerAuth: []
            parameters:
                - in: path
                  name: jobId
                  schema:
                    type: string
                  required: true
                  description: id of the job
            responses:
                '200':
                    description: get the job
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    _id:
                                        type: string
                                    jobTitle:
                                        type: string
                                    language:
                                        type: string
                                    company:
                                        type: string
                                    link:
                                        type: string
                                    source:
                                        type: string
                                    user:
                                        type: string
                
                '401': 
                    description: Unauthorized, need access token
                '403':
                    description: Cannot access to the resource with current access level
                '404':
                    description: job not found with this id (or with user access)
                '500':
                    description: Server error   

        delete:
            summary: Delete a job
            tags:
                - Jobs
            security:
                - bearerAuth: []
            parameters:
                - in: path
                  name: jobId
                  schema:
                    type: string
                  required: true
                  description: id of the job
            responses:
                '200':
                    description: Job succesfully deleted
                '401': 
                    description: Unauthorized, need access token
                '403':
                    description: Cannot access to the resource with current access level
                '404':
                    description: job not found with this id (or with user access)
                '500':
                    description: Server error   

            